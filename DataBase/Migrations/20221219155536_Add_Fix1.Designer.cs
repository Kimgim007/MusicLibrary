// <auto-generated />
using System;
using DataBase.MyDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221219155536_Add_Fix1")]
    partial class Add_Fix1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AudioFileSinger", b =>
                {
                    b.Property<int>("AudioFilesAudioFileId")
                        .HasColumnType("int");

                    b.Property<int>("SingersSingerId")
                        .HasColumnType("int");

                    b.HasKey("AudioFilesAudioFileId", "SingersSingerId");

                    b.HasIndex("SingersSingerId");

                    b.ToTable("AudioFileSinger", (string)null);
                });

            modelBuilder.Entity("AudioFileTag", b =>
                {
                    b.Property<int>("AudioFilesAudioFileId")
                        .HasColumnType("int");

                    b.Property<int>("TagsTagId")
                        .HasColumnType("int");

                    b.HasKey("AudioFilesAudioFileId", "TagsTagId");

                    b.HasIndex("TagsTagId");

                    b.ToTable("AudioFileTag", (string)null);
                });

            modelBuilder.Entity("DataBase.DbEntity.Entity.AudioFile", b =>
                {
                    b.Property<int>("AudioFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AudioFileId"), 1L, 1);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AudioFileId");

                    b.ToTable("AudioFiles");
                });

            modelBuilder.Entity("DataBase.DbEntity.Entity.Singer", b =>
                {
                    b.Property<int>("SingerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SingerId"), 1L, 1);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhotoSinger")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SingerId");

                    b.HasIndex("Nickname")
                        .IsUnique();

                    b.ToTable("Singers");
                });

            modelBuilder.Entity("DataBase.DbEntity.Entity.SingerTag", b =>
                {
                    b.Property<int>("SingerTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SingerTagId"), 1L, 1);

                    b.Property<int>("SingerId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("SingerTagId");

                    b.HasIndex("SingerId");

                    b.HasIndex("TagId");

                    b.ToTable("SingerTags");
                });

            modelBuilder.Entity("DataBase.DbEntity.Entity.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"), 1L, 1);

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("AudioFileSinger", b =>
                {
                    b.HasOne("DataBase.DbEntity.Entity.AudioFile", null)
                        .WithMany()
                        .HasForeignKey("AudioFilesAudioFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.DbEntity.Entity.Singer", null)
                        .WithMany()
                        .HasForeignKey("SingersSingerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AudioFileTag", b =>
                {
                    b.HasOne("DataBase.DbEntity.Entity.AudioFile", null)
                        .WithMany()
                        .HasForeignKey("AudioFilesAudioFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.DbEntity.Entity.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataBase.DbEntity.Entity.SingerTag", b =>
                {
                    b.HasOne("DataBase.DbEntity.Entity.Singer", "Singer")
                        .WithMany("SingerTags")
                        .HasForeignKey("SingerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.DbEntity.Entity.Tag", "Tag")
                        .WithMany("SingerTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Singer");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DataBase.DbEntity.Entity.Singer", b =>
                {
                    b.Navigation("SingerTags");
                });

            modelBuilder.Entity("DataBase.DbEntity.Entity.Tag", b =>
                {
                    b.Navigation("SingerTags");
                });
#pragma warning restore 612, 618
        }
    }
}
